#! Ассоциативная сеть
from Classes import *
import numpy as np
import matplotlib.pyplot as pl

e=((-1,1),(1,-1),(1,1))
train={
   (-1,-1,1):
   (
   (-1,-1,-1,-1,-1,-1,-1),
   (-1,-1,-1,1,-1,-1,-1),
   (-1,-1,1,1,-1,-1,-1),
   (-1,-1,-1,1,-1,-1,-1),
   (-1,-1,-1,1,-1,-1,-1),
   (-1,-1,-1,1,-1,-1,-1),
   (-1,-1,-1,1,-1,-1,-1),
   (-1,1,1,1,1,1,-1),
   (-1,-1,-1,-1,-1,-1,-1)
   ),
    (-1,1,-1):
   (
       (-1,-1,-1,-1,-1,-1,-1),
       (-1,1,1,1,1,1,-1),
       (-1,-1,-1,-1,-1,1,-1),
       (-1,-1,-1,-1,-1,1,-1),
       (-1,1,1,1,1,1,-1),
       (-1,1,-1,-1,-1,-1,-1),
       (-1,1,-1,-1,-1,-1,-1),
       (-1,1,1,1,1,1,-1),
       (-1,-1,-1,-1,-1,-1,-1),
   ),
   (-1,1,1):
   (
       (-1,-1,-1,-1,-1,-1,-1),
       (-1,1,1,1,1,1,-1),
       (-1,-1,-1,-1,-1,1,-1),
       (-1,-1,-1,-1,-1,1,-1),
       (-1,-1,-1,1,1,1,-1),
       (-1,-1,-1,-1,-1,1,-1),
       (-1,-1,-1,-1,-1,1,-1),
       (-1,1,1,1,1,1,-1),
       (-1,-1,-1,-1,-1,-1,-1)
   )
   }
check=((
   (-1,1,-1,-1,-1,-1,-1),
   (-1,-1,-1,1,-1,-1,-1),
   (-1,-1,1,1,-1,1,-1),
   (-1,-1,1,1,-1,-1,-1),
   (-1,1,-1,1,-1,-1,-1),
   (-1,-1,-1,1,-1,1,-1),
   (-1,-1,-1,1,-1,-1,-1),
   (-1,1,1,1,1,1,-1),
   (-1,-1,-1,1,-1,1,-1)
   ),
   (
       (-1,-1,1,-1,-1,1,-1),
       (-1,1,1,1,1,1,-1),
       (-1,-1,1,-1,-1,1,-1),
       (-1,1,-1,-1,-1,1,-1),
       (-1,1,1,1,1,1,-1),
       (1,1,-1,1,-1,-1,-1),
       (-1,1,-1,-1,-1,-1,-1),
       (-1,1,1,1,1,1,-1),
       (-1,-1,-1,-1,1,-1,-1),
   ),
   (
       (-1,-1,-1,-1,-1,-1,-1),
       (-1,1,1,1,1,-1,-1),
       (-1,-1,-1,-1,-1,1,-1),
       (1,-1,-1,-1,-1,1,-1),
       (-1,-1,-1,1,-1,1,-1),
       (-1,-1,-1,-1,-1,1,-1),
       (1,-1,-1,-1,-1,1,-1),
       (-1,1,1,-1,1,1,-1),
       (-1,-1,-1,-1,-1,-1,-1)
   ),
    (
       (-1,-1,-1,-1,-1,-1,-1),
       (-1,-1,-1,1,-1,1,-1),
       (-1,-1,1,1,-1,-1,-1),
       (-1,-1,-1,-1,-1,-1,-1),
       (-1,1,-1,1,-1,-1,-1),
       (-1,-1,-1,1,-1,-1,-1),
       (-1,1,-1,-1,-1,-1,-1),
       (-1,1,1,1,1,1,-1),
       (-1,1,-1,-1,-1,-1,-1)
       ),
   (
       (-1,-1,1,-1,-1,-1,-1),
       (-1,1,1,1,1,1,-1),
       (1,-1,1,-1,-1,1,-1),
       (-1,-1,-1,-1,-1,1,-1),
       (1,1,-1,1,1,-1,-1),
       (-1,1,-1,-1,1,-1,-1),
       (-1,1,-1,1,-1,-1,-1),
       (-1,1,1,-1,1,1,-1),
       (-1,-1,-1,-1,-1,-1,-1),
   ),
   (
       (-1,-1,-1,-1,-1,-1,-1),
       (-1,1,1,-1,1,1,-1),
       (-1,-1,1,-1,-1,1,-1),
       (1,-1,-1,-1,-1,-1,-1),
       (-1,-1,-1,-1,1,1,-1),
       (-1,-1,1,-1,-1,1,-1),
       (-1,-1,-1,1,-1,1,1),
       (-1,1,1,-1,1,1,-1),
       (-1,1,-1,-1,-1,-1,-1)
   )
   )
test={
     (-1,-1,1):
     (
       (-1,1,-1),
       (1,1,-1),
       (-1,1,-1),
       (-1,1,-1),
       (1,1,1),
         ),
     (-1,1,-1):
     (
       (1,1,1),
       (-1,-1,1),
       (1,1,1),
       (1,-1,-1),
       (1,1,1),
         ),   
     (-1,1,1):
     (
       (1,1,1),
       (-1,-1,1),
       (1,1,1),
       (-1,-1,1),
       (1,1,1),
         )
    }

testcheck=(
     (
       (-1,1,-1),
       (1,1,-1),
       (-1,-1,-1),
       (-1,1,-1),
       (1,1,1),
         ),
     (
       (1,1,1),
       (-1,-1,1),
       (1,-1,1),
       (1,-1,-1),
       (1,-1,1),
         ),   

     (
       (1,1,-1),
       (1,-1,1),
       (1,1,1),
       (-1,-1,1),
       (1,1,1),
         )
    )

def main(): 
    ass=Associative(test)
    fig,axs=pl.subplots(2,3) 
    for i in range(3):
        axs[0,i].imshow(matrix(testcheck[i]))
        res,img=ass.Compute(testcheck[i])
        axs[1,i].imshow(img.reshape(5,3))

    ass1=Associative(train)
    fig1,axes=pl.subplots(2,6) 
    for i in range(6):
        axes[0,i].imshow(matrix(check[i]))
        res,img=ass1.Compute(check[i])
        axes[1,i].imshow(img.reshape(9,7))
    pl.show()




if __name__=="__main__":
    main()